/*
 * Copyright (c) 2017 Transparent Language. All rights reserved.
 */

apply plugin: 'groovy'

defaultTasks << 'clean'
defaultTasks << 'build'

dependencies {
    compile "org.codehaus.groovy:groovy-all::indy"
}

compileGroovy {
    groovyOptions.configurationScript = file( "$rootDir/gradle/groovyCompilerConfiguration.groovy" )
}

compileGroovy.groovyOptions.optimizationOptions['indy'] = true
compileTestGroovy.groovyOptions.optimizationOptions['indy'] = true

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

compileGroovy.options*.compilerArgs = ['-Xlint:deprecation','-encoding', 'UTF-8']
compileTestGroovy.options*.compilerArgs = ['-Xlint:deprecation','-encoding', 'UTF-8']

ext.sharedManifest = manifest {
    attributes( 'Implementation-Title': project.name, 'Implementation-Version': project.version )
}

test {
    useJUnit {
        includeCategories 'org.kurron.categories.UnitTest'
    }
    testLogging {
        showStandardStreams = false
        exceptionFormat = 'full'
    }
    reports.html.setDestination( file( "$buildDir/reports/unitTests" ) )

    // set heap size for the test JVM(s)
    minHeapSize = "128m"
    maxHeapSize = "512m"
}

task allIntegrationTests( type: Test, dependsOn: [build, startIntegrationTestResources] ) {
    group 'Verification'
    description = 'Runs the all integration tests.'
    useJUnit {
        includeCategories 'org.kurron.categories.InboundIntegrationTest', 'org.kurron.categories.OutboundIntegrationTest'
    }
    testLogging {
        showStandardStreams = false
        exceptionFormat = 'full'
    }
    reports.html.setDestination( file( "$buildDir/reports/integrationTests" ) )
    // copy into forked child process
    doFirst {
        systemProperties['spring.profiles.active'] = System.properties['spring.profiles.active'] ?: 'default'

        systemProperties['spring.rabbitmq.port'] = rabbitPort
        logger.quiet "Port for RabbitMQ is ${systemProperties['spring.rabbitmq.port']}"
        systemProperties['spring.rabbitmq.host'] = rabbitHost
        logger.quiet "Host for RabbitMQ is ${systemProperties['spring.rabbitmq.host']}"

        systemProperties['spring.data.mongodb.port'] = mongoPort
        logger.quiet "Port for MongoDB is ${systemProperties['spring.data.mongodb.port']}"
        systemProperties['spring.data.mongodb.host'] = mongoHost
        logger.quiet "Host for MongoDB is ${systemProperties['spring.data.mongodb.host']}"
    }
}

if ( 'true' == runIntegrationTests ) {
    defaultTasks += ['allIntegrationTests']
    allIntegrationTests.finalizedBy destroyIntegrationTestResources
}
